import { BinObjField } from "../BinObjData"

export class BinUnitField extends BinObjField {}

export namespace BinUnitField {
    export let AIPlacementRadius = new BinUnitField('uabr', 'real')
    export let AIPlacementType = new BinUnitField("uabt", 'string')
    export let AllowCustomTeamColor = new BinUnitField("utcc", 'bool')
    export let AnimationBlendTimeseconds = new BinUnitField("uble", 'real')
    export let AnimationCastBackswing = new BinUnitField("ucbs", 'real')
    export let AnimationCastPoint = new BinUnitField("ucpt", 'real')
    export let AnimationRunSpeed = new BinUnitField("urun", 'real')
    export let AnimationWalkSpeed = new BinUnitField("uwal", 'real')
    /** 'Ethereal', 'Flesh', 'Wood', 'Stone', 'Metal' */
    export let ArmorSoundType = new BinUnitField("uarm", 'string')
    /** 'normal', 'small', 'medium', 'large', 'fort', 'hero', 'divine', 'none' */
    export let ArmorType = new BinUnitField("udty", 'string')
    export let ArtSpecial = new BinUnitField("uspa", 'string')
    export let ArtTarget = new BinUnitField("utaa", 'string')
    export let Attack1AnimationBackswingPoint = new BinUnitField("ubs1", 'real')
    export let Attack1AnimationDamagePoint = new BinUnitField("udp1", 'real')
    export let Attack1AreaofEffectFullDamage = new BinUnitField("ua1f", 'int')
    export let Attack1AreaofEffectMediumDamage = new BinUnitField("ua1h", 'int')
    export let Attack1AreaofEffectSmallDamage = new BinUnitField("ua1q", 'int')
    export let Attack1AreaofEffectTargets = new BinUnitField("ua1p", 'string')
    /** 'unknown', 'normal', 'pierce', 'siege', 'spells', 'chaos', 'magic', 'hero' */
    export let Attack1AttackType = new BinUnitField("ua1t", 'string')
    export let Attack1CooldownTime = new BinUnitField("ua1c", 'real')
    export let Attack1DamageBase = new BinUnitField("ua1b", 'int')
    export let Attack1DamageFactorMedium = new BinUnitField("uhd1", 'real')
    export let Attack1DamageFactorSmall = new BinUnitField("uqd1", 'real')
    export let Attack1DamageLossFactor = new BinUnitField("udl1", 'real')
    export let Attack1DamageSidesperDie = new BinUnitField("ua1s", 'int')
    export let Attack1DamageSpillDistance = new BinUnitField("usd1", 'real')
    export let Attack1DamageSpillRadius = new BinUnitField("usr1", 'real')
    export let Attack1DamageUpgradeAmount = new BinUnitField("udu1", 'int')
    export let Attack1DamageDice = new BinUnitField("ua1d", 'int')
    export let Attack1MaximumTargets = new BinUnitField("utc1", 'int')
    export let Attack1ProjectileArc = new BinUnitField("uma1", 'real')
    export let Attack1ProjectileArt = new BinUnitField("ua1m", 'string')
    export let Attack1ProjectileHomingEnabled = new BinUnitField("umh1", 'bool')
    export let Attack1ProjectileSpeed = new BinUnitField("ua1z", 'int')
    export let Attack1Range = new BinUnitField("ua1r", 'int')
    export let Attack1RangeMotionBuffer = new BinUnitField("urb1", 'real')
    export let Attack1ShowUI = new BinUnitField("uwu1", 'bool')
    /** 'air', 'alive', 'allies', 'ancient', 'dead', 'debris', 'decoration', 'enemies', 'friend', 'ground', 'hero',
      * 'invulnerable', 'item', 'mechanical', 'neutral', 'nonancient', 'none', 'nonhero', 'nonsapper', 'notself',
      * 'organic', 'player', 'playerunits', 'sapper', 'self', 'structure', 'terrain', 'tree', 'vulnerable', 'wall', */
    export let Attack1TargetsAllowed = new BinUnitField("ua1g", 'string')
    /** 'Nothing', 'AxeMediumChop', 'MetalHeavyBash', 'MetalHeavyChop',
      * 'MetalHeavySlice', 'MetalLightChop', 'MetalLightSlice', 'MetalMediumBash', 'MetalMediumChop',
      * 'MetalMediumSlice', 'RockHeavyBash', 'WoodHeavyBash', 'WoodLightBash', 'WoodMediumBash' */
    export let Attack1WeaponSound = new BinUnitField("ucs1", 'string')
    /** 'normal', 'instant', 'artillery', 'aline', 'missile', 'splash', 'bounce', 'line' */
    export let Attack1WeaponType = new BinUnitField("ua1w", 'string')
    export let Attack2AnimationBackswingPoint = new BinUnitField("ubs2", 'real')
    export let Attack2AnimationDamagePoint = new BinUnitField("udp2", 'real')
    export let Attack2AreaofEffectFullDamage = new BinUnitField("ua2f", 'int')
    export let Attack2AreaofEffectMediumDamage = new BinUnitField("ua2h", 'int')
    export let Attack2AreaofEffectSmallDamage = new BinUnitField("ua2q", 'int')
    export let Attack2AreaofEffectTargets = new BinUnitField("ua2p", 'string')
    /** 'unknown', 'normal', 'pierce', 'siege', 'spells', 'chaos', 'magic', 'hero' */
    export let Attack2AttackType = new BinUnitField("ua2t", 'string')
    export let Attack2CooldownTime = new BinUnitField("ua2c", 'real')
    export let Attack2DamageBase = new BinUnitField("ua2b", 'int')
    export let Attack2DamageFactorMedium = new BinUnitField("uhd2", 'real')
    export let Attack2DamageFactorSmall = new BinUnitField("uqd2", 'real')
    export let Attack2DamageLossFactor = new BinUnitField("udl2", 'real')
    export let Attack2DamageSidesperDie = new BinUnitField("ua2s", 'int')
    export let Attack2DamageSpillDistance = new BinUnitField("usd2", 'real')
    export let Attack2DamageSpillRadius = new BinUnitField("usr2", 'real')
    export let Attack2DamageUpgradeAmount = new BinUnitField("udu2", 'int')
    export let Attack2DamagebooleanofDice = new BinUnitField("ua2d", 'int')
    export let Attack2MaximumbooleanofTargets = new BinUnitField("utc2", 'int')
    export let Attack2ProjectileArc = new BinUnitField("uma2", 'real')
    export let Attack2ProjectileArt = new BinUnitField("ua2m", 'string')
    export let Attack2ProjectileHomingEnabled = new BinUnitField("umh2", 'bool')
    export let Attack2ProjectileSpeed = new BinUnitField("ua2z", 'int')
    export let Attack2Range = new BinUnitField("ua2r", 'int')
    export let Attack2RangeMotionBuffer = new BinUnitField("urb2", 'real')
    export let Attack2ShowUI = new BinUnitField("uwu2", 'bool')
    /** 'air', 'alive', 'allies', 'ancient', 'dead', 'debris', 'decoration', 'enemies', 'friend', 'ground', 'hero',
      * 'invulnerable', 'item', 'mechanical', 'neutral', 'nonancient', 'none', 'nonhero', 'nonsapper', 'notself',
      * 'organic', 'player', 'playerunits', 'sapper', 'self', 'structure', 'terrain', 'tree', 'vulnerable', 'wall', */
    export let Attack2TargetsAllowed = new BinUnitField("ua2g", 'string')
    /** 'Nothing', 'AxeMediumChop', 'MetalHeavyBash', 'MetalHeavyChop',
      * 'MetalHeavySlice', 'MetalLightChop', 'MetalLightSlice', 'MetalMediumBash', 'MetalMediumChop',
      * 'MetalMediumSlice', 'RockHeavyBash', 'WoodHeavyBash', 'WoodLightBash', 'WoodMediumBash' */
    export let Attack2WeaponSound = new BinUnitField("ucs2", 'string')
    /** 'normal', 'instant', 'artillery', 'aline', 'missile', 'splash', 'bounce', 'line' */
    export let Attack2WeaponType = new BinUnitField("ua2w", 'string')
    export let AttacksEnabled = new BinUnitField("uaen", 'int')
    export let BuildTime = new BinUnitField("ubld", 'int')
    export let ButtonPositionX = new BinUnitField("ubpx", 'int')
    export let ButtonPositionY = new BinUnitField("ubpy", 'int')
    export let CanDropItemsOnDeath = new BinUnitField("udro", 'bool')
    export let CanFlee = new BinUnitField("ufle", 'bool')
    export let CategorizationCampaign = new BinUnitField("ucam", 'bool')
    export let CategorizationSpecial = new BinUnitField("uspe", 'bool')
    export let CollisionSize = new BinUnitField("ucol", 'real')
    export let DeathTimeseconds = new BinUnitField("udtm", 'real')
    export let DeathType = new BinUnitField("udea", 'int')
    export let DefaultActiveAbility = new BinUnitField("udaa", 'string')
    export let DefenseBase = new BinUnitField("udef", 'int')
    export let DefenseUpgradeBonus = new BinUnitField("udup", 'int')
    export let DependencyEquivalents = new BinUnitField("udep", 'string')
    export let Description = new BinUnitField("ides", 'string')
    export let DisplayasNeutralHostile = new BinUnitField("uhos", 'bool')
    export let ElevationSamplePoints = new BinUnitField("uept", 'int')
    export let ElevationSampleRadius = new BinUnitField("uerd", 'real')
    export let FogOfWarSampleRadius = new BinUnitField("ufrd", 'real')
    export let FoodCost = new BinUnitField("ufoo", 'int')
    export let FoodProduced = new BinUnitField("ufma", 'int')
    export let GoldBountyAwardedBase = new BinUnitField("ubba", 'int')
    export let GoldBountyAwardedSidesperDie = new BinUnitField("ubsi", 'int')
    export let GoldBountyAwardedbooleanofDice = new BinUnitField("ubdi", 'int')
    export let GoldCost = new BinUnitField("ugol", 'int')
    export let HasTilesetSpecificData = new BinUnitField("utss", 'bool')
    export let HasWaterShadow = new BinUnitField("ushr", 'bool')
    export let HideMinimapDisplay = new BinUnitField("uhom", 'bool')
    export let HitPointsMaximumBase = new BinUnitField("uhpm", 'int')
    export let HitPointsRegenerationRate = new BinUnitField("uhpr", 'real')
    export let HitPointsRegenerationType = new BinUnitField("uhrt", 'string')
    export let Hotkey = new BinUnitField("uhot", 'string')
    export let IconGameInterface = new BinUnitField("uico", 'string')
    export let IconScoreScreen = new BinUnitField("ussi", 'string')
    export let IsaBuilding = new BinUnitField("ubdg", 'bool')
    export let ItemsSold = new BinUnitField("usei", 'string')
    export let LumberBountyAwardedBase = new BinUnitField("ulba", 'int')
    export let LumberBountyAwardedSidesperDie = new BinUnitField("ulbs", 'int')
    export let LumberBountyAwardedbooleanofDice = new BinUnitField("ulbd", 'int')
    export let LumberCost = new BinUnitField("ulum", 'int')
    export let ManaInitialAmount = new BinUnitField("umpi", 'int')
    export let ManaMaximum = new BinUnitField("umpm", 'int')
    export let ManaRegeneration = new BinUnitField("umpr", 'real')
    export let MaximumPitchAngledegrees = new BinUnitField("umxp", 'real')
    export let MaximumRollAngledegrees = new BinUnitField("umxr", 'real')
    export let MinimumAttackRange = new BinUnitField("uamn", 'int')
    export let ModelFile = new BinUnitField("umdl", 'string')
    export let ModelFileExtraVersions = new BinUnitField("uver", 'string')
    export let MovementHeight = new BinUnitField("umvh", 'real')
    export let MovementHeightMinimum = new BinUnitField("umvf", 'real')
    export let MovementSound = new BinUnitField("umsl", 'string')
    export let MovementType = new BinUnitField("umvt", 'string')
    export let Name = new BinUnitField("unam", 'string')
    export let NameEditorSuffix = new BinUnitField("unsf", 'string')
    export let NormalAbilities = new BinUnitField("uabi", 'string')
    export let OccluderHeight = new BinUnitField("uocc", 'real')
    export let OrientationInterpolation = new BinUnitField("uori", 'int')
    export let PlaceableInEditor = new BinUnitField("uine", 'bool')
    export let PointValue = new BinUnitField("upoi", 'int')
    export let Priority = new BinUnitField("upri", 'int')
    export let ProjectileImpactZ = new BinUnitField("uimz", 'real')
    export let ProjectileImpactZSwimming = new BinUnitField("uisz", 'real')
    export let ProjectileLaunchX = new BinUnitField("ulpx", 'real')
    export let ProjectileLaunchY = new BinUnitField("ulpy", 'real')
    export let ProjectileLaunchZ = new BinUnitField("ulpz", 'real')
    export let ProjectileLaunchZSwimming = new BinUnitField("ulsz", 'real')
    export let PropulsionWindowdegrees = new BinUnitField("uprw", 'real')
    export let Race = new BinUnitField("urac", 'string')
    export let RandomSound = new BinUnitField("ursl", 'string')
    export let RepairGoldCost = new BinUnitField("ugor", 'int')
    export let RepairLumberCost = new BinUnitField("ulur", 'int')
    export let RepairTime = new BinUnitField("urtm", 'int')
    export let RequiredAnimationNames = new BinUnitField("uani", 'string')
    export let RequiredAnimationNamesAttachments = new BinUnitField("uaap", 'string')
    export let RequiredAttachmentLinkNames = new BinUnitField("ualp", 'string')
    export let RequiredBoneNames = new BinUnitField("ubpr", 'string')
    export let Requirements = new BinUnitField("ureq", 'string')
    export let RequirementsLevels = new BinUnitField("urqa", 'string')
    export let ScaleProjectiles = new BinUnitField("uscb", 'bool')
    export let ModelScale = new BinUnitField("usca", 'real')
    export let SelectionCircleHeight = new BinUnitField("uslz", 'real')
    export let SelectionCircleOnWater = new BinUnitField("usew", 'bool')
    export let SelectionScale = new BinUnitField("ussc", 'real')
    export let ShadowImageCenterX = new BinUnitField("ushx", 'real')
    export let ShadowImageCenterY = new BinUnitField("ushy", 'real')
    export let ShadowImageHeight = new BinUnitField("ushh", 'real')
    export let ShadowImageUnit = new BinUnitField("ushu", 'string')
    export let ShadowImageWidth = new BinUnitField("ushw", 'real')
    export let ShadowTextureBuilding = new BinUnitField("ushb", 'string')
    export let SightRadiusDay = new BinUnitField("usid", 'int')
    export let SightRadiusNight = new BinUnitField("usin", 'int')
    export let Sleeps = new BinUnitField("usle", 'bool')
    export let SoundLoopingFadeInRate = new BinUnitField("ulfi", 'int')
    export let SoundLoopingFadeOutRate = new BinUnitField("ulfo", 'int')
    export let MovementSpeedBase = new BinUnitField("umvs", 'int')
    export let MovementSpeedMaximum = new BinUnitField("umas", 'int')
    export let MovementSpeedMinimum = new BinUnitField("umis", 'int')
    export let StockMaximum = new BinUnitField("usma", 'int')
    export let StockReplenishInterval = new BinUnitField("usrg", 'int')
    export let StockStartDelay = new BinUnitField("usst", 'int')
    export let TargetedAs = new BinUnitField("utar", 'string')
    export let TeamColor = new BinUnitField("utco", 'int')
    export let Tilesets = new BinUnitField("util", 'string')
    export let TintingColorBlue = new BinUnitField("uclb", 'int')
    export let TintingColorGreen = new BinUnitField("uclg", 'int')
    export let TintingColorRed = new BinUnitField("uclr", 'int')
    export let TooltipBasic = new BinUnitField("utip", 'string')
    export let TooltipExtended = new BinUnitField("utub", "string")
    export let TurnRate = new BinUnitField("umvr", 'real')
    export let UnitClassification = new BinUnitField("utyp", 'string')
    export let UnitSoundSet = new BinUnitField("usnd", 'string')
    export let UnitsSold = new BinUnitField("useu", 'string')
    export let UpgradesUsed = new BinUnitField("upgr", 'string')
    export let UseClickHelper = new BinUnitField("uuch", 'bool')
    export let UseExtendedLineofSight = new BinUnitField("ulos", 'bool')
    export let Hero_AgilityPerLevel = new BinUnitField("uagp", 'real')
    export let Hero_ConstructionSound = new BinUnitField("ubsl", 'string')
    export let Hero_FormationRank = new BinUnitField("ufor", 'int')
    export let Hero_GroundTexture = new BinUnitField("uubs", 'string')
    export let Hero_GroupSeparationEnabled = new BinUnitField("urpo", 'bool')
    export let Hero_GroupSeparationGroupNumber = new BinUnitField("urpg", 'int')
    export let Hero_GroupSeparationParameter = new BinUnitField("urpp", 'int')
    export let Hero_GroupSeparationPriority = new BinUnitField("urpr", 'int')
    export let Hero_HeroAbilities = new BinUnitField("uhab", 'string')
    export let Hero_HeroRevivalLocations = new BinUnitField("urva", 'string')
    export let Hero_HideHeroDeathMsg = new BinUnitField("uhhd", 'bool')
    export let Hero_HideHeroInterfaceIcon = new BinUnitField("uhhb", 'bool')
    export let Hero_HideHeroMinimapDisplay = new BinUnitField("uhhm", 'bool')
    export let Hero_IntelligencePerLevel = new BinUnitField("uinp", 'real')
    export let Hero_Level = new BinUnitField("ulev", 'int')
    export let Hero_PrimaryAttribute = new BinUnitField("upra", 'string')
    export let Hero_ProperNames = new BinUnitField("upro", 'string')
    export let Hero_ProperNamesUsed = new BinUnitField("upru", 'int')
    export let Hero_RequierementsForTier1 = new BinUnitField("urq0", 'string')
    export let Hero_RequierementsForTier2 = new BinUnitField("urq1", 'string')
    export let Hero_RequierementsForTier3 = new BinUnitField("urq2", 'string')
    export let Hero_RequierementsForTier4 = new BinUnitField("urq3", 'string')
    export let Hero_RequierementsForTier5 = new BinUnitField("urq4", 'string')
    export let Hero_RequierementsForTier6 = new BinUnitField("urq5", 'string')
    export let Hero_RequierementsForTier7 = new BinUnitField("urq6", 'string')
    export let Hero_RequierementsForTier8 = new BinUnitField("urq7", 'string')
    export let Hero_RequierementsForTier9 = new BinUnitField("urq8", 'string')
    export let Hero_StartingAgility = new BinUnitField("uagi", 'int')
    export let Hero_StartingIntelligence = new BinUnitField("uint", 'int')
    export let Hero_StartingStrength = new BinUnitField("ustr", 'int')
    export let Hero_StrengthPerLevel = new BinUnitField("ustp", 'real')
    export let Hero_StructuresBuilt = new BinUnitField("ubui", 'string')
    export let Hero_TooltipAwaken = new BinUnitField("uawt", 'string')
    export let Hero_TooltipRevive = new BinUnitField("utpr", 'string')
    export let Hero_TransportedSize = new BinUnitField("ucar", 'int')
    export let AgilityPerLevel = new BinUnitField("uagp", 'real')
    export let ConstructionSound = new BinUnitField("ubsl", 'string')
    export let GroundTexture = new BinUnitField("uubs", 'string')
    export let ItemsMade = new BinUnitField("umki", 'string')
    export let NeutralBuildingShowsMinimapIcon = new BinUnitField("unbm", 'bool')
    export let NeutralBuildingValidAsRandomBuilding = new BinUnitField("unbr", 'bool')
    export let PathingMap = new BinUnitField("upat", 'string')
    export let PlacementPreventedBy = new BinUnitField("upar", 'string')
    export let PlacementRequires = new BinUnitField("upap", 'string')
    export let PlacementRequiresWaterRadius = new BinUnitField("upaw", 'real')
    export let ResearchesAvailable = new BinUnitField("ures", 'string')
    export let RevivesDeadHeros = new BinUnitField("urev", 'bool')
    export let UnitsTrained = new BinUnitField("utra", 'string')
    export let UpgradesTo = new BinUnitField("uupt", 'string')
}